[tool.poetry]
name = "emdx"
version = "0.6.1"
description = "Documentation Index Management System - A powerful knowledge base for developers"
authors = ["Alex Rockwell <arockwell@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/arockwell/emdx"
repository = "https://github.com/arockwell/emdx"
documentation = "https://github.com/arockwell/emdx#readme"
keywords = ["knowledge-base", "documentation", "cli", "sqlite", "full-text-search"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Indexing",
]

[tool.poetry.dependencies]
python = "^3.13"
typer = {extras = ["all"], version = "^0.9.0"}
rich = "^13.0.0"
click = "~8.1.7"
python-dotenv = "^1.0.0"
gitpython = "^3.1.0"
pygments = "^2.0.0"
rapidfuzz = "^3.0.0"
PyGithub = "^2.1.0"
textual = "^4.0.0"
psutil = "^7.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.0.0"
pre-commit = "^3.0.0"

[tool.poetry.scripts]
emdx = "emdx.main:run"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py313']

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "B008",  # Do not perform function call in argument defaults (typer pattern)
    "UP006", # Use {to} instead of {from} for type annotations (Python 3.9+)
    "UP007", # Use X | Y for Union (Python 3.10+)
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --tb=short --strict-markers"
testpaths = ["tests"]
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
]

[tool.coverage.run]
source = ["emdx"]